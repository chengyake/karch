一、进程间通信概述
进程通信有如下一些目的：
A、数据传输：一个进程需要将它的数据发送给另一个进程，发送的数据量在一个字节到几M字节之间
B、共享数据：多个进程想要操作共享数据，一个进程对共享数据的修改，别的进程应该立刻看到。
C、通知事件：一个进程需要向另一个或一组进程发送消息，通知它（它们）发生了某种事件（如进程终止时要通知父进程）。
D、资源共享：多个进程之间共享同样的资源。为了作到这一点，需要内核提供锁和同步机制。
E、进程控制：有些进程希望完全控制另一个进程的执行（如Debug进程），此时控制进程希望能够拦截另一个进程的所有陷入和异常，并能够及时知道它的状态改变。


Linux 进程间通信（IPC）以下以几部分发展而来：
1. 早期UNIX进程间通信、
2. 基于System V进程间通信(AT&T)、
3. 基于Socket进程间通信和POSIX进程间通信(BSD)。

早期UNIX进程间通信方式包括：管道、FIFO、信号。
System V进程间通信方式包括：System V消息队列、System V信号灯、System V共享内存、
POSIX进程间通信包括       ：posix消息队列、posix信号灯、posix共享内存、SOCKT套接字


现在linux使用的进程间通信方式：
（1）管道（pipe）和有名管道（FIFO）
（2）信号（signal）
（3）消息队列
（4）共享内存
（5）信号量
（6）套接字（socket)




